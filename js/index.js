var sketch=angular.module("sketch",[]);
sketch.controller("sketchController",["$scope",function($scope){
	$scope.canvasWH={width:1000,height:480};
	

	$scope.fnname1="line";
	$scope.fnname={
		"line":"line",
		"rect":"rect",
		"arc":"arc",                                       
		"pen":"pen",
		"xp":"xp"
	}
	$scope.setmousemove=function(tool){
		$scope.fnname1=tool;
	}
	$scope.css={
		fillStyle:"#000",
		strokeStyle:"#000",
		lineWidth:1,
		style:"fill"
	}
	$scope.setStyle=function(s){
		$scope.css.style=s;
	}
	$scope.save=function(e){
		console.log(current);
		if(current){
		e.srcElement.href=canvas.toDataURL();
		e.srcElement.download="mypic.png";
		}
		else{
			alert("blank");
		}
	}
	$scope.news=function(){
		if(current){
			var a=confirm("Is save it?");
			if(a){
				document.onclick=function(){
				location.href=(canvas.toDataURL().replace("data:image/png","data:stream/octet"));
				}
			}
			else{
				clearCanvas();
				current=null;
			}
		}
		else{
			alert("blank")
		}
	}


	var  
		current,
	 	canvas=document.querySelector("#canvas"),
		ctx=canvas.getContext("2d"),
		clearCanvas=function(){
			ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
		},
		setmousemove={
		line:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.beginPath();
				ctx.moveTo(e.offsetX,e.offsetY);
				ctx.lineTo(ev.offsetX,ev.offsetY);
				ctx.stroke();
			}
		},
		rect:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.beginPath();
				if($scope.css.style=="fill"){
				ctx.fillRect(e.offsetX,e.offsetY,(ev.offsetX-e.offsetX),(ev.offsetY-e.offsetY));
				}
				else{
				ctx.strokeRect(e.offsetX,e.offsetY,(ev.offsetX-e.offsetX),(ev.offsetY-e.offsetY));
				}
			}
		},
		arc:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.beginPath();
				ctx.arc(e.offsetX,e.offsetY,Math.abs(ev.offsetX-e.offsetX),0,Math.PI*2);
				ctx[$scope.css.style]();
			}
		},
		xp:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.clearRect(e.offsetX,e.offsetY,(ev.offsetX-e.offsetX),(ev.offsetY-e.offsetY));
			}
		},
		pen:function(e){
			ctx.moveTo(e.offsetX,e.offsetY);
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.lineTo(ev.offsetX,ev.offsetY);
				ctx.stroke();
			}
		}
	};


	canvas.onmousedown=function(e){
		ctx.strokeStyle=$scope.css.strokeStyle;
		ctx.fillStyle=$scope.css.fillStyle;
		ctx.lineWidth=$scope.css.lineWidth;
			setmousemove[$scope.fnname1](e);
		document.onmouseup=function(){
			canvas.onmouseup=null;
			canvas.onmousemove=null;
			current=ctx.getImageData(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
		}
	}
	
}])